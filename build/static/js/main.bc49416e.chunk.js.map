{"version":3,"sources":["Components/BackBtn.js","pages/TeamDetails.js","Components/Create.js","pages/Teams.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["BackToHomeBtn","name","link","to","className","TeamDetails","props","handleChange","e","target","setState","value","update","fetch","method","headers","body","JSON","stringify","id_equipe","state","data","nom_equipe","then","response","json","delete","request","getResponseHeader","window","location","match","params","id","i","length","team","this","onSubmit","style","padding","width","placeholder","type","onChange","backgroundColor","React","Component","Create","change","submit","Teams","error","isLoaded","result","teams","map","key","onClick","Team","Home","display","alignItems","justifyContent","height","boxShadow","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.bc49416e.chunk.js","sourcesContent":["//TODO------IMPORT MODULES--------\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//TODO------CREATE FUNCTION--------\nexport default function BackToHomeBtn({ name, link }) {\n  return (\n    <div>\n      <Link to={link}>\n        <button className=\"btn btn-primary btn-block\"> {name}</button>\n      </Link>\n    </div>\n  );\n}\n","//TODO------IMPORT MODULES--------\nimport React from \"react\";\n\n//TODO------IMPORT COMPONENTS--------\nimport BackBtn from \"../Components/BackBtn\";\n\n//TODO------CREATE CLASS-----------\nclass TeamDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nom_equipe: null,\n      id_equipe: this.props.match.params.id,\n      data: null,\n    };\n  }\n  handleChange = (e) => {\n    let target = e.target;\n    this.setState({\n      [target.name]: target.value,\n    });\n  };\n  //TODO------FETCH DATA TO DISPLAY NAME--------\n  componentDidMount() {\n    fetch(`/read`)\n      .then((response) => response.json())\n      .then((data) => {\n        for (let i = 0; i < data.length; i++) {\n          let team = data[i];\n\n          if (team.id_equipe == this.props.match.params.id) {\n            this.setState({ data: team });\n          }\n        }\n      });\n  }\n  //TODO------FETCH DATA TO UPDATE--------\n  update = () => {\n    fetch(\"/update\", {\n      method: \"PUT\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        id_equipe: this.state.data.id_equipe,\n        nom_equipe: this.state.nom_equipe,\n      }),\n    }).then((response) => {\n      return response.json();\n    });\n  };\n  //TODO------FETCH DATA TO DELETE--------\n  delete = () => {\n    fetch(\"/delete\", {\n      method: \"DELETE\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        id_equipe: this.state.data.id_equipe,\n      }),\n    })\n      .then((response) => {\n        return response.json();\n      })\n      .then((request) => {\n        if (request.getResponseHeader(\"REQUIRES_AUTH\") === \"1\") {\n          window.location = \"/\";\n        }\n      });\n  };\n\n  //TODO------RENDER FUNCTION--------\n  render() {\n    let team = this.state.data != null ? this.state.data.nom_equipe : null;\n    return (\n      <div>\n        <h1>{team}</h1>\n        <form onSubmit={this.update}>\n          <input\n            style={{\n              padding: \"20px\",\n              width: \"200px\",\n            }}\n            name=\"nom_equipe\"\n            placeholder=\"update team\"\n            type=\"text\"\n            value={this.state.nom_equipe}\n            onChange={this.handleChange}\n          />\n          <input\n            type=\"submit\"\n            value=\"Update\"\n            className=\"btn btn-primary btn-block\"\n          />\n        </form>\n        <form onSubmit={this.delete}>\n          <input\n            style={{ backgroundColor: \"red\" }}\n            name=\"id_equipe\"\n            type=\"submit\"\n            value=\"Delete\"\n            className=\"btn btn-primary btn-block\"\n          />\n        </form>\n        <BackBtn name=\"Back to Teams\" link=\"/teams\" />\n      </div>\n    );\n  }\n}\n\nexport default TeamDetails;\n","//TODO------IMPORT MODULES--------\nimport React, { Component } from \"react\";\n\n//TODO------CREATE CLASS--------\nexport default class Create extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nom_equipe: null,\n    };\n  }\n\n  change = (e) => {\n    let target = e.target;\n    this.setState({\n      [target.name]: target.value,\n    });\n    // if (target.value === \"\") {\n    //   console.log(\"failed\");\n    // }\n  };\n  //TODO------FETCH DATA--------\n  submit = () => {\n    fetch(\"/create/\", {\n      method: \"POST\",\n      headers: { \"content-type\": \"application/json\" },\n      body: JSON.stringify({\n        nom_equipe: this.state.nom_equipe,\n      }),\n    }).then((response) => {\n      return response.json();\n    });\n  };\n  //TODO------RENDER FORM--------\n  render() {\n    return (\n      <form onSubmit={this.submit}>\n        <input\n          name=\"nom_equipe\"\n          placeholder=\"add team\"\n          type=\"text\"\n          value={this.state.nom_equipe}\n          onChange={this.change}\n        />\n        <input\n          type=\"submit\"\n          value=\"Add Team\"\n          className=\"btn btn-primary btn-block\"\n        />\n      </form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Create from \"../Components/Create\";\nimport Team from \"./TeamDetails\";\nimport BackBtn from \"../Components/BackBtn\";\n\nexport default class Teams extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n    };\n  }\n  componentDidMount() {\n    fetch(\"/read/\")\n      .then((response) => response.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            teams: result,\n          });\n        },\n\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n  render() {\n    const { error, isLoaded, teams } = this.state;\n\n    if (error) {\n      return <div>Error in loading</div>;\n    } else if (!isLoaded) {\n      return <div>Loading ...</div>;\n    } else {\n      return (\n        <div>\n          <div className=\"cards\">\n            {teams.map((team) => (\n              <div className=\"card\" key={team.id_equipe}>\n                <Link to={`/${team.id_equipe}`}>\n                  <p className=\"card-title\" onClick={Team}>\n                    {team.nom_equipe}\n                  </p>\n                </Link>\n              </div>\n            ))}\n          </div>\n          <Create />\n          <BackBtn name=\"Back to Home\" link=\"/\" />\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Home() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Link to=\"/teams\">\n        <button\n          className=\"btn btn-primary btn-block\"\n          style={{\n            boxShadow: \"0px 14px 80px blue\",\n            height: \"100px\",\n          }}\n        >\n          Manage Your Teams\n        </button>\n      </Link>\n    </div>\n  );\n}\n","//TODO------IMPORT MODULES--------\nimport React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n//TODO--------IMPORT COMPONENTS---------\nimport \"./App.css\";\nimport TeamDetails from \"./pages/TeamDetails\";\nimport Teams from \"./pages/Teams\";\nimport Home from \"./pages/Home\";\n\n//TODO--------CREATE FUNCTION----------\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" exact component={Home} />\n          <Route exact path=\"/teams\" exact component={Teams} />\n          <Route exact path=\"/:id\" component={TeamDetails} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}